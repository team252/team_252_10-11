/**
COPY THESE MOTOR DECLARATIONS INTO ANY FILE USING THIS FILE

#pragma config(Hubs,  S1, HTMotor,  HTMotor,  HTMotor,  HTMotor)
#pragma config(Motor,  mtr_S1_C1_1,     motorD,        tmotorNone, openLoop)
#pragma config(Motor,  mtr_S1_C1_2,     motorE,        tmotorNone, openLoop)
#pragma config(Motor,  mtr_S1_C2_1,     motorF,        tmotorNone, openLoop)
#pragma config(Motor,  mtr_S1_C2_2,     motorG,        tmotorNone, openLoop)
#pragma config(Motor,  mtr_S1_C3_1,     motorH,        tmotorNone, openLoop)
#pragma config(Motor,  mtr_S1_C3_2,     motorI,        tmotorNone, openLoop)
#pragma config(Motor,  mtr_S1_C4_1,     motorJ,        tmotorNone, openLoop)
#pragma config(Motor,  mtr_S1_C4_2,     motorK,        tmotorNone, openLoop)
*/
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

//////////////////////////////////////////////////////////
// FTC Team 252 2011 season
// Motor.h
//
// This header file allows the user to control the motors
// and has global variables to keep track of motor status
//////////////////////////////////////////////////////////

#ifndef motor_h_ //if we havent already included this file
#define motor_h_ //tell the compiler that we have included it

//This section of defines lets us pass named numbers to setMotor
#define LEFT_FRONT 0
#define RIGHT_FRONT 1
#define LEFT_REAR 2
#define RIGHT_REAR 3
//End section of defines to help with setMotor

int LF = 0; //Left Front
int RF = 0; //Right Front
int LR = 0; //Left Rear
int RR = 0; //Right Rear
//^All mototrs were ititalized to 0, we don't want the robot going crazy when it turns on :)


/**
* sets the passed motor to the passed value
* motorName: a defined integer that represents the motor
* value: the value between 100 and -100 to set the motor to
*/
void setMotor(int motorName, int value){
  switch (motorName){//depending on the motorname passed
    case LEFT_FRONT: //if left front is the passed motorName
      LF = value; //set LF to passed value
      motor[motorD] = value; //set the actual Front Left motor to passed value
    break; //end LEFT_FRONT value

    case RIGHT_FRONT: //if the right front is the passed motorName
      RF = value; //set RF to passed value
      motor[motorE] = value; //set the actual Right Front motor to passed value
    break; //end RIGHT_FRONT

    case LEFT_REAR: //if the left rear is the passed motorName
      LR = value; //set LR to passed value
      motor[motorF] = value; //set the actual Left Rear motor to passed value
    break; //end LEFT_REAR

    case RIGHT_REAR: //if the right rear is the passed motorName
      RR = value; //set RR to passed value
      motor[motorG] = value; //set the actual Right Rear motor to passed value
    break; //end RIGHT_REAR

  }
}

#endif //end of file
